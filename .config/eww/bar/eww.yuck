(defvar eww "/usr/bin/eww")


(deflisten workspace "bar/scripts/hypr.sh")
(defwidget workspaces []
	(eventbox :onscroll "if [[ $(hyprctl activeworkspace | grep ID | cut -f 3 -d ' ') -lt 9 || {} == up ]]; then echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g'; else echo 9; fi | xargs hyprctl dispatch workspace"
		(literal :content workspace)))

(defwidget tray []
	(systray :pack-direction "ttb"
			 :icon-size 24
			 :class "bar-tray"))


(defpoll mic_stat :interval "1s" "pactl list sources | grep 'Digital Microphone' -A 5 | grep Mute | cut -f 2 -d ' '")
(defwidget mic[]
	(revealer :duration "500ms"
			  :transition "slidedown"
			  :reveal { mic_stat == "yes"? false : true }
		(label :text { mic_stat == "yes"? "" : "" }
			   :class "bar-mic")))


(defpoll battery :interval "1s"	"bar/scripts/battery percent")
(defpoll batteryColor :interval "1s" "bar/scripts/battery color")
(defpoll batteryDuration :interval "5s" "acpi | cut -d ',' -f 3")
(defwidget bat []
	(box :class "bat_module"
		 :vexpand "false"
		 :hexpand "false"
		(circular-progress :value { battery }
						   :class "bar-battery"
						   :style "color: ${batteryColor};"
				    	   :thickness 3
			(label :class "bar-battery"
			       :limit-width 2
				   :tooltip "${ batteryDuration }"
				   :show_truncated false
				   :wrap false
				   :text { battery == "100" ? "" : battery }))))


(defwidget bright []
	(eventbox :onhover "${ eww } update bright=true"
		:onhoverlost "${ eww } update bright=false"
		(box :orientation "v"
			:space-evenly "false"
			:spacing 2
			(revealer :transition "slideup"
				:reveal bright
				:duration "550ms"
				(scale :class "bar-brightness-slider"
					:value current-brightness
					:tooltip "Brightness: ${ round(current-brightness, 0) }%"
					:onchange "light -S {}"
					:orientation "v"
					:flipped true
					:max 100
			:min 0))
			(label :class "bar-brightness"
				:text ""))))

(defpoll current-brightness :interval "1s" "light")
(defvar bright false)


(defwidget volume []
	(eventbox :onhover "${eww} update volume_bar=true"
			  :onhoverlost "${eww} update volume_bar=false"
		(box :orientation "v"
			 :space-evenly "false" 
			 :spacing "2"
			(revealer :transition "slideup"
					  :reveal volume_bar
					  :duration "550ms"
				(scale :class "bar-volume-slider"
					   :value current-volume
					   :orientation "v"
					   :flipped true
					   :tooltip "Volume: ${current-volume}%"
					   :max 100
					   :min 0
					   :onchange "amixer -D pulse sset Master {}%"))
			(button	:onclick "bar/scripts/popup audio"
					:class volumestat ""))))

(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll volumestat :interval "1s" "echo bar-volume-$\(amixer -D pulse sget Master | grep 'Left:' | cut -d [ -f 3 | tr -d ])")
(defvar volume_bar false)



(defwidget control []
	(box :orientation "v"
		 :space-evenly false
		 :spacing 5
		 :class "bar-control"
		(bat)
		(mic)
		
		
		(bright)
		(volume)
		(tray)))



(defwidget time []
	(eventbox :onhover "${eww} update clock=true"
			  :onhoverlost "${eww} update clock=false"
			  :onclick "menu/launch.sh menu"
		(box :orientation "v"
			 :class "bar-time"
			 :space-evenly "false"
			 :vexpand "false"
			(revealer :transition "slideup"
					  :reveal clock
				:halign "center"
					  :duration "550ms"
				(box :orientation "v" 
					 :space-evenly false
					 (label :text dayname)
					(label :text day)
					(label :text month)
					(label :text year)
					(label :text "")))
			(label :class "bar-time-hour" :text hour)
			(label :class "bar-time-min" :text min)
			(label :class "bar-time-ampm" :text ampm))))

(defpoll hour :interval "1s" "date '+%I'")
(defpoll min :interval "1s" "date '+%M'")
(defpoll ampm :interval "1s" "date '+%p'")
(defpoll day :interval "1s"	"date '+%d'")
(defpoll dayname :interval "1s"	"date '+%a'")
(defpoll month :interval "1s" "date '+%b'")
(defpoll year :interval "1s" "date '+%g'")
(defvar clock false)




(defwidget power []
	(eventbox :onhover "${eww} update power=true"
			  :onhoverlost "${eww} update power=false"
		(box :orientation "v"
			 :space-evenly "false"
			 :vexpand "false"
			 :class "bar-powermenu"
			(revealer :transition "slideup"
					  :reveal power
					  :duration "550ms"
				(box :orientation "V"
					 :space-evenly "false"
					(button	:class "bar-button-off"
						:tooltip "Shutdown"
						:onclick "shutdown now"	"")
					(button	:class "bar-button-reb"
							:tooltip "Reboot"
							:onclick "reboot" "")
					(button	:class "bar-button-quit"
							:tooltip "Logout"
							:onclick "hyprctl dispatch exit" "󰗽")
					(button	:class "bar-button-lock"
							:tooltip "Lock Screen"
							:onclick "swaylock -f; eww reload"	"")))
			(button :class "bar-button-bspres"
				:tooltip "Restart Hyprland"
				:onclick "hyprctl reload; eww reload" "󰸊"))))

(defvar power false)


(defwidget top []
	(box :orientation "v"
		 :space-evenly false
		 :valign "start"
		(workspaces)
		))


(defwidget bottom []
	(box :orientation "v"
		 :space-evenly false
		 :class "bar_bottom"
		(time)
		(power)))


(defwidget end []
	(box :orientation "v"
		 :space-evenly "false"
		 :valign "end"
		 :spacing 5
		(control)
		(bottom)))


(defwidget bar []
	(box :class "bar"
		 :orientation "v"
		 :vexpand "false"
		 :hexpand "false"
		(top)
		(end)))


(defwindow bar :exclusive true
			   :namespace "sidebar"
			   :geometry
			   (geometry :x "4px" 
						 :y "0" 
						 :anchor "left center"
						 :height "100%"
						 :width "50px")
			   :monitor 0
			   :focusable false
			   :stacking "fg"
			   :hexpand "false"
			   :vexpand "false"
	(bar))
