(defvar eww "/usr/bin/eww -c $HOME/.config/eww/bar")


;; Launcher Widgets ;;
(defwidget launcher []
	(box 
		:orientation "v" 
		:space-evenly false
		:spacing 15
			(eventbox 
				;; :onhover "${eww} update launchericons=true"
				;; :onhoverlost "${eww} update launchericons=false"
				(box
				:orientation "v"
				;; :class "launcher_icon"
				:space-evenly false
				:valign "end"
				(button
				 :class "launcher_icon" 
				 :onclick "scripts/popup launcher"
				 "󱗼"
				)
				)
			)
		)
	)

(defvar launchericons false)

(defwidget dashboard []
	(box
		:orientation "v" 
		:space-evenly "false" 
		:spacing -15
  		(button
			:class "launcher_icon" 
	 		:onclick "scripts/popup dashboard"
	 		"󱥸"
			)
		)
	)

;; Workspaces Widgets ;;
(deflisten workspace "scripts/hypr.sh")
(defwidget workspaces []
(eventbox :onscroll "echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g' | xargs hyprctl dispatch workspace"
(literal :content workspace)))
;; (box    :class "works"  :orientation "v" :spacing 0 :space-evenly "true"
;; 			(button :onclick "hyprctl dispatch workspace 1" :class "011" "")
;; 			(button :onclick "hyprctl dispatch workspace 2" :class "02" "")
;; 			(button :onclick "hyprctl dispatch workspace 3" :class "0" "")
;; 			(button :onclick "hyprctl dispatch workspace 4" :class "0" "")
;; 			(button :onclick "hyprctl dispatch workspace 5" :class "0" "")
;; 			(button :onclick "hyprctl dispatch workspace 6" :class "0" "")
;; 			(button :onclick "hyprctl dispatch workspace 7" :class "0" "")
;; 			(button :onclick "hyprctl dispatch workspace 8" :class "0" "")
;; 			(button :onclick "hyprctl dispatch workspace 9" :class "09" "")


;; Battery Widgets ;;
(defpoll battery :interval "1s"	"scripts/battery percent")
(defpoll batteryColor :interval "1s" "scripts/battery color")
(defwidget bat []
	(box 
		:class "bat_module" 
		:vexpand "false" 
		:hexpand "false" 
		(circular-progress 
			:value { battery }
			:class batteryColor
			:thickness 4
			(label
				:class batteryColor
				:limit-width 2
				:tooltip "battery on ${ battery }%"
				:show_truncated false
				:wrap false
				:text { battery == "100" ? "" : battery }
				)
			)
		)
	)


;; Wifi Widgets ;;
(defwidget wifi []
	(box		:orientation "v"
				:tooltip wifi-name
	(button		:onclick "scripts/popup wifi" 
				:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

;; Bluettoth Widgets ;;
(defwidget bluetooth []
	(box		:orientation "v"
				:tooltip bluetooth-name
	(button		:onclick "scripts/popup wifi" 
				:class "bluetooth-icon" "󰂯")))
(defpoll bluetooth-name :interval "1s" "bluetoothctl info |grep Name | cut -d : -f 2")


;; Brightness Widgets ;;
(defwidget bright []
  	(eventbox 
  		:onhover "${ eww } update bright=true"
  		:onhoverlost "${ eww } update bright=false"
		(box    
			:orientation "v"
			:space-evenly "false"
			:spacing 2
  			(revealer
				:transition "slideup"
		  		:reveal bright
    			:duration "550ms"
  				(scale 
					:class "bribar"
			  	    :value current-brightness
				    :tooltip "Brightness: ${ round(current-brightness, 0) }%"
				    :onchange "light -S {}"
				    :orientation "v"
				    :flipped true
				    :max 101
				    :min 0))
  			(label 
				:class "brightness-icon"
			  	:text "")
			)
		)
	)
(defpoll current-brightness :interval "1s" "light")
(defvar bright false)


;; Volume Widgets ;;
(defwidget volume []
	(eventbox :onhover "${eww} update volume=true"
			  :onhoverlost "${eww} update volume=false"
	(box      :orientation "v"
			  :space-evenly "false" 
			  :spacing "2"
	(revealer :transition "slideup"
			  :reveal volume
			  :duration "550ms"
	(scale    :class "volbar"
			  :value current-volume
			  :orientation "v"
			  :flipped true
			  :tooltip "Volume: ${current-volume}%"
			  :max 100
			  :min 0
			  :onchange "amixer -D pulse sset Master {}%" ))
	(button   :onclick "scripts/popup audio"   :class volumestat ""))))
(defpoll current-volume :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll volumestat :interval "1s" "echo volume$\(amixer -D pulse sget Master | grep 'Left:' | cut -d [ -f 3 | tr -d ])")
(defvar volume false)


;; Control Panel Widgets ;;
(defwidget control []
	(box :orientation "v"
		 :space-evenly false
		 :spacing 5
		 :class "control"
(bat)
(wifi)
(bluetooth)
(bright)
(volume)))


;; Clock Widgets ;;
(defwidget time []
	(eventbox 
		:onhover "${eww} update clock=true"
		:onhoverlost "${eww} update clock=false"
		(box
			:orientation "v"
			:class "time"
			:space-evenly "false"
			:vexpand "false"
			:valign "end"
			(revealer
				:transition "slideup"
				:reveal clock
				:duration "550ms"
				(box 
					:orientation "v" 
					:space-evenly false
					(label :text day)
					(label :text month)
					(label :text year)
					(label :text "")
				)
			)
			(label :class "time-hour" :text hour)
			(label :class "time-min" :text min)
			(label :class "time-ampm" :text ampm)
		)
	)
)

(defpoll hour	:interval "1s"	"date '+%I'")
(defpoll min	:interval "1s"	"date '+%M'")
(defpoll ampm	:interval "1s"	"date '+%p'")
(defpoll day	:interval "1s"	"date '+%d'")
(defpoll month	:interval "1s"	"date '+%b'")
(defpoll year	:interval "1s"	"date '+%g'")
(defvar clock false)



;; Powermenu Widgets ;;
(defwidget power []
	(eventbox	:onhover "${eww} update power=true"
				:onhoverlost "${eww} update power=false"
	(box		:orientation "v"
				:space-evenly "false"
				:vexpand "false"
				:class "powermenu"
	(revealer	:transition "slideup"
				:reveal power
				:duration "550ms"
	(box		:orientation "V"
				:space-evenly "false"

	(button   	:class "button-bspres"
				:tooltip "Restart Hyprland"
				:onclick "hyprctl reload" "󰸊")

  	(button		:class "button-reb"
	  			:tooltip "Reboot"
				:onclick "reboot" "")

	(button		:class "button-quit"
				:tooltip "Logout"
				:onclick "hyprctl dispatch exit" "󰗽")

	(button		:class "button-lock"
				:tooltip "Lock Screen"
				:onclick "swaylock"	"")))

	(button		:class "button-off"
				:tooltip "Shutdown"
				:onclick "shutdown now"	""))))
(defvar power false)


;; Top Widgets ;;
(defwidget top []
	(box	:orientation "v"
			:space-evenly false
			:valign "start"
(launcher)
(workspaces)
(dashboard)))


;; Bottom Widgets ;;
(defwidget bottom []
	(box	:orientation "v"
			:space-evenly false
(time)
(power)))


;; End Widgets ;;
(defwidget end []
	(box :orientation "v"
		 :space-evenly "false"
		 :valign "end"
		 :spacing 5
(control)
(bottom)))


;; Bar Widgets ;;
(defwidget bar []
	(box :class "eww_bar"
		 :orientation "v"
		 :vexpand "false"
		 :hexpand "false"
(top)
(end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;							Window Section's							 ;;	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; Bar Windows ;;
(defwindow bar
	:exclusive true
	:namespace "sidebar"
	:geometry (geometry :x "4px" 
						:y "0" 
						:anchor "left center"
						:height "100%"
						:width "47px")
	:monitor 0
	:focusable false
	:stacking "fg"
	:hexpand "false"
	:vexpand "false"
(bar))
